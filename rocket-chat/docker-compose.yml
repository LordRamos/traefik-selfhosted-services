version: '3.3'

networks:
  rocketchat-network:
    external: true
  traefik-proxy:
    external: true

volumes:
  rocketchat-uploads:
  rocketchat-mongodb:
  # traefik-certificates:

services:
  mongodb-rocketchat:
    image: mongo:6.0
    volumes:
     - rocketchat-mongodb:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_PORT_NUMBER: 27017
      MONGODB_INITIAL_PRIMARY_HOST: mongodb-rocketchat
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
      MONGODB_ADVERTISED_HOSTNAME: mongodb-rocketchat
      MONGODB_ENABLE_JOURNAL: 'true'
      ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - rocketchat-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  rocketchat:
    image: rocketchat/rocket.chat:latest
    volumes:
      - rocketchat-uploads:/app/uploads
    environment:
      PORT: 3000
      ROOT_URL: http://rocket.localhost:3000
      MONGO_URL: mongodb://mongodb-rocketchat:27017/rocketchat
      MONGO_OPLOG_URL: mongodb://mongodb-rocketchat:27017/local
      DEPLOY_METHOD: docker
      Accounts_UseDNSDomainCheck: 'false'
    networks:
      - rocketchat-network
      - traefik-proxy
    links:
      - mongodb-rocketchat
    healthcheck:
      test: >
         /usr/local/bin/node -e '
         const http = require("http");
         const options = {
           host: "localhost",
           port: 3000,
           path: "/api/info",
           timeout: 2000
         };
         const healthCheck = http.request(options, (res) => {
           console.log(`HEALTHCHECK STATUS: $${res.statusCode}`);
           if (res.statusCode == 200) {
             process.exit(0);
           } else {
             process.exit(1);
           }
         });
         healthCheck.on("error", function (err) {
           console.error("ERROR");
           process.exit(1);
         });
         healthCheck.end();'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      - "traefik.http.routers.rocketchat.rule=Host(`rocket.localhost`)"
      # - "traefik.http.routers.rocketchat.service=rocketchat"
      - "traefik.http.routers.rocketchat.entrypoints=web"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
      # - "traefik.http.routers.rocketchat.tls=true"
      # - "traefik.http.routers.rocketchat.tls.certresolver=letsencrypt"
      # - "traefik.http.services.rocketchat.loadbalancer.passhostheader=true"
      # - "traefik.http.routers.rocketchat.middlewares=compresstraefik"
      # - "traefik.http.middlewares.compresstraefik.compress=true"
      
    restart: unless-stopped
    depends_on:
      mongodb-rocketchat:
        condition: service_healthy

   